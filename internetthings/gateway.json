[
    {
        "id": "8890b39a49bec2d7",
        "type": "tab",
        "label": "Gateway",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "ee59a53b554668f1",
        "type": "inject",
        "z": "8890b39a49bec2d7",
        "name": "Create Database",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "CREATE TABLE \"Sensors\" (     \"id\"    INTEGER NOT NULL UNIQUE,     \"node_code\" TEXT NOT NULL,     \"gateway_code\"  TEXT NOT NULL,     \"sensor_code\"   TEXT NOT NULL,     \"value\" INTEGER NOT NULL,     \"timestamp\" INTEGER NOT NULL,     \"synced\"    INTEGER DEFAULT 0,     PRIMARY KEY(\"id\" AUTOINCREMENT) );",
        "payload": "",
        "payloadType": "str",
        "x": 160,
        "y": 60,
        "wires": [
            [
                "107be8c791cf5c3a"
            ]
        ]
    },
    {
        "id": "107be8c791cf5c3a",
        "type": "sqlite",
        "z": "8890b39a49bec2d7",
        "mydb": "7f42198291793d62",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "gateway_db",
        "x": 390,
        "y": 60,
        "wires": [
            [
                "ea84a4749dbf72f4"
            ]
        ]
    },
    {
        "id": "ea84a4749dbf72f4",
        "type": "debug",
        "z": "8890b39a49bec2d7",
        "name": "DB created log",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 640,
        "y": 60,
        "wires": []
    },
    {
        "id": "1e8937567417c2ef",
        "type": "debug",
        "z": "8890b39a49bec2d7",
        "name": "debug 3",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 280,
        "y": 280,
        "wires": []
    },
    {
        "id": "146e1f443924a49d",
        "type": "mqtt in",
        "z": "8890b39a49bec2d7",
        "name": "",
        "topic": "node/#",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "c36d93eca33163b6",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 90,
        "y": 280,
        "wires": [
            [
                "1e8937567417c2ef"
            ]
        ]
    },
    {
        "id": "6ec39fe26f04fc8c",
        "type": "mqtt in",
        "z": "8890b39a49bec2d7",
        "name": "",
        "topic": "node/#",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "c36d93eca33163b6",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 110,
        "y": 400,
        "wires": [
            [
                "167c225686f3ddf3"
            ]
        ]
    },
    {
        "id": "afe1a5edd51a2b22",
        "type": "function",
        "z": "8890b39a49bec2d7",
        "name": "Prepare request data",
        "func": "if (msg.payload.length == 1) {\n    msg.payload = msg.payload[0]; \n} else {\n    msg.payload = null;\n}\nmsg.id = msg.payload.id\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 920,
        "y": 400,
        "wires": [
            [
                "e6fea7c3c907310d"
            ]
        ]
    },
    {
        "id": "f64a8c1bda9f15d4",
        "type": "inject",
        "z": "8890b39a49bec2d7",
        "name": "Empty Database",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "DELETE FROM \"main\".\"Sensors\"",
        "payload": "",
        "payloadType": "date",
        "x": 160,
        "y": 120,
        "wires": [
            [
                "2e3546214f6e8bc3"
            ]
        ]
    },
    {
        "id": "2e3546214f6e8bc3",
        "type": "sqlite",
        "z": "8890b39a49bec2d7",
        "mydb": "7f42198291793d62",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "gateway_db",
        "x": 390,
        "y": 120,
        "wires": [
            [
                "e28706bbecd5e6f0"
            ]
        ]
    },
    {
        "id": "e6fea7c3c907310d",
        "type": "http request",
        "z": "8890b39a49bec2d7",
        "name": "",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://localhost:1880/api/backend/insert",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 170,
        "y": 480,
        "wires": [
            [
                "af2734b331a71fa3"
            ]
        ]
    },
    {
        "id": "68b37b4e97300dc0",
        "type": "sqlite",
        "z": "8890b39a49bec2d7",
        "mydb": "7f42198291793d62",
        "sqlquery": "prepared",
        "sql": "INSERT INTO \"main\".\"Sensors\"(\"gateway_code\",\"sensor_code\",\"node_code\",\"value\",\"timestamp\") VALUES ($gateway_code,$sensor_code, $node_code, $value, $timestamp);",
        "name": "Insert",
        "x": 510,
        "y": 400,
        "wires": [
            [
                "43a6afbde7e3fd15"
            ]
        ]
    },
    {
        "id": "167c225686f3ddf3",
        "type": "function",
        "z": "8890b39a49bec2d7",
        "name": "prepare data",
        "func": "let value = msg.payload\nlet timestamp = Date.now();\nlet topic = msg.topic.split(\"/\");\nlet node_code = topic[1];\nlet sensor_code = topic[topic.length - 1];\n\nmsg.topic.node_code = node_code;\nmsg.topic.sensor_code = sensor_code;\nmsg.topic.value = value;\nmsg.topic.timestamp = timestamp;\nmsg.params = {\n    $node_code: node_code,\n    $sensor_code: sensor_code,\n    $value: value,\n    $timestamp: timestamp,\n    $gateway_code: \"block_1\"\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 400,
        "wires": [
            [
                "68b37b4e97300dc0"
            ]
        ]
    },
    {
        "id": "43a6afbde7e3fd15",
        "type": "sqlite",
        "z": "8890b39a49bec2d7",
        "mydb": "7f42198291793d62",
        "sqlquery": "prepared",
        "sql": "SELECT * FROM \"main\".\"Sensors\" WHERE \"gateway_code\"=$gateway_code AND\"sensor_code\"=$sensor_code AND \"node_code\"=$node_code AND \"value\"=$value AND \"timestamp\"=$timestamp AND \"synced\"=0;",
        "name": "SELECT",
        "x": 700,
        "y": 400,
        "wires": [
            [
                "afe1a5edd51a2b22"
            ]
        ]
    },
    {
        "id": "af2734b331a71fa3",
        "type": "switch",
        "z": "8890b39a49bec2d7",
        "name": "Result Code",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "200",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 390,
        "y": 480,
        "wires": [
            [
                "c4f238f01f228831"
            ]
        ]
    },
    {
        "id": "a427538650ab942d",
        "type": "sqlite",
        "z": "8890b39a49bec2d7",
        "mydb": "7f42198291793d62",
        "sqlquery": "prepared",
        "sql": "UPDATE \"main\".\"Sensors\" SET \"synced\"=1 WHERE \"id\"=$id;\n",
        "name": "Set synced",
        "x": 810,
        "y": 480,
        "wires": [
            []
        ]
    },
    {
        "id": "c4f238f01f228831",
        "type": "function",
        "z": "8890b39a49bec2d7",
        "name": "Add Id",
        "func": "msg.params = {\n    $id: msg.id\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 480,
        "wires": [
            [
                "a427538650ab942d"
            ]
        ]
    },
    {
        "id": "30ca33b43efc4390",
        "type": "cronplus",
        "z": "8890b39a49bec2d7",
        "name": "Cron exex sync",
        "outputField": "payload",
        "timeZone": "",
        "persistDynamic": false,
        "commandResponseMsgOutput": "output1",
        "outputs": 1,
        "options": [
            {
                "name": "schedule1",
                "topic": "topic1",
                "payloadType": "default",
                "payload": "",
                "expressionType": "cron",
                "expression": "0 0 * * * * *",
                "location": "",
                "offset": "0",
                "solarType": "all",
                "solarEvents": "sunrise,sunset"
            }
        ],
        "x": 140,
        "y": 780,
        "wires": [
            [
                "9d8f0dee7456654d"
            ]
        ]
    },
    {
        "id": "9d8f0dee7456654d",
        "type": "sqlite",
        "z": "8890b39a49bec2d7",
        "mydb": "7f42198291793d62",
        "sqlquery": "fixed",
        "sql": "SELECT * FROM \"main\".\"Sensors\" WHERE \"synced\"=0;",
        "name": "SELECT",
        "x": 380,
        "y": 780,
        "wires": [
            [
                "316691043b2ee8ae"
            ]
        ]
    },
    {
        "id": "316691043b2ee8ae",
        "type": "loop",
        "z": "8890b39a49bec2d7",
        "name": "Loop not synced",
        "kind": "cond",
        "count": "",
        "initial": "1",
        "step": "1",
        "condition": "msg.payload.length > 0",
        "conditionType": "js",
        "when": "after",
        "enumeration": "enum",
        "enumerationType": "msg",
        "limit": "",
        "loopPayload": "loop-keep",
        "finalPayload": "final-orig",
        "x": 600,
        "y": 780,
        "wires": [
            [
                "a40156d8ea8e3b6d"
            ],
            [
                "420ea8a0646f3579"
            ]
        ]
    },
    {
        "id": "a40156d8ea8e3b6d",
        "type": "debug",
        "z": "8890b39a49bec2d7",
        "name": "END",
        "active": false,
        "tosidebar": true,
        "console": true,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 840,
        "y": 780,
        "wires": []
    },
    {
        "id": "420ea8a0646f3579",
        "type": "function",
        "z": "8890b39a49bec2d7",
        "name": "Pop from payload to send",
        "func": "msg.toSend = msg.payload.pop();\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 630,
        "y": 680,
        "wires": [
            [
                "316691043b2ee8ae",
                "8f3cd0877f0b3a98"
            ]
        ]
    },
    {
        "id": "8f3cd0877f0b3a98",
        "type": "function",
        "z": "8890b39a49bec2d7",
        "name": "Move data to payload",
        "func": "msg.payload = msg.toSend;\n\nmsg.id = msg.toSend.id\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 280,
        "y": 580,
        "wires": [
            [
                "e6fea7c3c907310d"
            ]
        ]
    },
    {
        "id": "4b1d111ee5e5d1b7",
        "type": "comment",
        "z": "8890b39a49bec2d7",
        "name": "Debugging line",
        "info": "# ",
        "x": 120,
        "y": 240,
        "wires": []
    },
    {
        "id": "e28706bbecd5e6f0",
        "type": "debug",
        "z": "8890b39a49bec2d7",
        "name": "DB cleared log",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 640,
        "y": 120,
        "wires": []
    },
    {
        "id": "7f42198291793d62",
        "type": "sqlitedb",
        "db": "/home/pinguin/gateway_db",
        "mode": "RWC"
    },
    {
        "id": "c36d93eca33163b6",
        "type": "mqtt-broker",
        "name": "",
        "broker": "127.0.0.1",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    }
]